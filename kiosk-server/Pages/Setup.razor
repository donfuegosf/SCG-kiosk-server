@page "/setup"

<MudPaper Class="pa-4 ma-4 flex-grow-1 flex-shrink-1"  Elevation="10">
 

    <MudDataGrid T="RedirectItem" SortMode="SortMode.None" Items="@RedirectUrlList" ReadOnly="false" EditMode="DataGridEditMode.Cell"
                 CommittedItemChanges="@CommittedItemChanges"
                  Bordered="true" Dense="false" Striped="true" Elevation="4">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Kiosk Urls</MudText>
            <MudSpacer />
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"  @onclick="@HandleReboot">Reboot</MudButton>
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-5 mr-1"  @onclick="@HandleShutdown">Shutdown</MudButton>


        </ToolBarContent>
        <Columns>
            <Column T="RedirectItem" Field="Id" IsEditable="false" HeaderStyle="width:1%" CellStyle="text-align:center;"/>
            <Column T="RedirectItem" Field="Name" HeaderStyle="Width:20%">
                <EditTemplate>
                    <MudTextField T="string" Value="context.Item.Name" ValueChanged="@(async (e) => { context.Item.Name = e;await CommittedItemChanges(context.Item); })" Margin="@Margin.Dense" Style="margin-top:0" />
                </EditTemplate>
            </Column>
            <Column T="RedirectItem" Field="Url">
                <EditTemplate>
                    <MudTextField T="string" Value="context.Item.Url" ValueChanged="@(async (e) => { context.Item.Url = e;await CommittedItemChanges(context.Item); })" Margin="@Margin.Dense" Style="margin-top:0" />
                </EditTemplate>
            </Column>

            <Column T="RedirectItem" IsEditable="false" Title="Action" HeaderStyle="width:1%" CellStyle="text-align:center;">
                <CellTemplate>
                    @if (!string.IsNullOrEmpty(context.Item.Url))
                    {
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Delete" Title="Delete" OnClick="@(async (e) => { await DeleteUrl(context.Item); })"/>
                    }

                </CellTemplate>
            </Column>

        </Columns>
    </MudDataGrid>




    <MudCard Elevation="4">
        <MudCardHeader Class="pb-0 mt-4">
            <CardHeaderContent >
                <MudText Typo="Typo.h6">Memory</MudText>
            </CardHeaderContent>
         
        </MudCardHeader>
        <MudCardContent Class ="pa-0">
            <MudSimpleTable Elevation="0" Class="pa-0">
                <thead>
                <tr>
                    <th style="width:30%">Total</th>
                    <th style ="width:30%">Used</th>
                    <th>Free</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>
                        @SetupModel.MemoryMetrics.TotalMemory.ToString("N0") MB
                    </td>
                    <td>
                        @SetupModel.MemoryMetrics.UsedMemory.ToString("N0") MB
                    </td>
                    <td>
                        @SetupModel.MemoryMetrics.FreeMemory.ToString("N0") MB
                    </td>
                </tr>
                </tbody>
            </MudSimpleTable>
        </MudCardContent>
    </MudCard>

    <MudCard Elevation="4">
        <MudCardHeader Class="pb-0 mt-4">
            <CardHeaderContent >
                <MudText Typo="Typo.h6">Disk Space</MudText>
            </CardHeaderContent>
         
        </MudCardHeader>
        <MudCardContent Class ="pa-0">
            <MudSimpleTable Elevation="0" Class="pa-0">
                <thead>
                <tr>
                    <th style ="width:30%">Total</th>
                    <th style ="width:30%">Used</th>
                    <th>Free</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>
                        @SetupModel.DiskMetrics.TotalDiskSpace.ToString("N1") GB
                    </td>
                    <td>
                        @((SetupModel.DiskMetrics.TotalDiskSpace -SetupModel.DiskMetrics.AvailableDiskSpace).ToString("N1")) GB
                    </td>
                    <td>
                        @SetupModel.DiskMetrics.AvailableDiskSpace.ToString("N1") GB
                    </td>
                </tr>
                </tbody>
            </MudSimpleTable>
        </MudCardContent>
    </MudCard>
    
    @if (SetupModel.TemperatureMetrics.CpuTemperature > 0)
    {
        <MudCard Elevation="4">
            <MudCardHeader Class="mt-4">
                <CardHeaderContent >
                    <MudText Typo="Typo.h6">CPU Temperature : @SetupModel.TemperatureMetrics.CpuTemperature.ToString("N1") &deg;C @SetupModel.TemperatureMetrics.ThrottledState</MudText>
                </CardHeaderContent>

            </MudCardHeader>
        </MudCard>
    }

    <MudCard Elevation="4">
        <MudCardHeader Class="mt-4">
            <CardHeaderContent >
                <MudText Typo="Typo.h6">@SetupModel.CpuMetrics.OsDescription</MudText>
                @if (!string.IsNullOrEmpty(SetupModel.CpuMetrics.OsName))
                {
                    <br/>
                    <MudText Typo="Typo.h6">@SetupModel.CpuMetrics.OsName</MudText>
                }
                @if (!string.IsNullOrEmpty(SetupModel.CpuMetrics.CpuModel))
                {
                    <br />
                    <MudText Typo="Typo.h6">@SetupModel.CpuMetrics.CpuHardware</MudText>
                    <br />
                    <MudText Typo="Typo.h6">@SetupModel.CpuMetrics.CpuModel</MudText>
                    <br />
                    <MudText Typo="Typo.h6">@SetupModel.CpuMetrics.CpuModelName</MudText>
                }
            </CardHeaderContent>
         
        </MudCardHeader>
    </MudCard>
 
</MudPaper>
